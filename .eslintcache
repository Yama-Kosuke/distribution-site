[{"/Users/yamazakikosuke/Desktop/React/distribution-site/src/reportWebVitals.ts":"1","/Users/yamazakikosuke/Desktop/React/distribution-site/src/index.tsx":"2","/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/topPage.tsx":"3","/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topHeader.tsx":"4","/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topMain.tsx":"5","/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/resultPage.tsx":"6","/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/resultPage/resultImageList.tsx":"7","/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/downloadPage.tsx":"8","/Users/yamazakikosuke/Desktop/React/distribution-site/src/firebase.ts":"9"},{"size":425,"mtime":1609938313712,"results":"10","hashOfConfig":"11"},{"size":518,"mtime":1609939957039,"results":"12","hashOfConfig":"11"},{"size":710,"mtime":1610163437526,"results":"13","hashOfConfig":"11"},{"size":667,"mtime":1610249132972,"results":"14","hashOfConfig":"11"},{"size":3285,"mtime":1610249145222,"results":"15","hashOfConfig":"11"},{"size":664,"mtime":1610249090723,"results":"16","hashOfConfig":"11"},{"size":3704,"mtime":1610274641372,"results":"17","hashOfConfig":"11"},{"size":4220,"mtime":1610274919756,"results":"18","hashOfConfig":"11"},{"size":549,"mtime":1610249240384,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"v7fgmy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yamazakikosuke/Desktop/React/distribution-site/src/reportWebVitals.ts",[],["40","41"],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/index.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/topPage.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topHeader.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topMain.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/resultPage.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/resultPage/resultImageList.tsx",["42","43"],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/downloadPage.tsx",["44","45"],"import React, { FC, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport firebase from \"../firebase\";\nimport TopHeader from \"../components/topPage/topHeader\";\nimport { TileData } from \"../types/types\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    main: {\n      textAlign: \"center\",\n      marginTop: \"5%\",\n    },\n    tileImage: {\n      height: \"436px\",\n      width: \"436px\",\n    },\n  })\n);\n\nconst DownloadPage: FC = () => {\n  const { keyword }: { keyword: string } = useParams();\n  const classes = useStyles();\n  const [data, setData] = useState<TileData[]>([]);\n\n  const getData = async (searchWord: string | undefined) => {\n    const db = firebase.firestore();\n    const tileDataRef = db.collection(\"tileData\");\n    const searchedData = tileDataRef.where(\n      \"keyword\",\n      \"array-contains\",\n      searchWord\n    );\n    const snapShot = await searchedData.get();\n    const temporaryData: object[] = [];\n\n    snapShot.docs.map((doc) => {\n      temporaryData.push(doc.data());\n    });\n\n    setData(temporaryData as TileData[]);\n  };\n\n  useEffect(() => {\n    getData(keyword);\n  }, []);\n\n  const displayImage = () => {\n    return (\n      <div>\n        {data.map((tile) => (\n          <div>\n            <img\n              className={classes.tileImage}\n              src={tile.image}\n              alt={tile.title}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const downloadButton = () => {\n    return (\n      <div>\n        {data.map((tile) => (\n          <Button variant=\"contained\" href={tile.downloadUrl}>\n            無料ダウンロード\n          </Button>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <TopHeader />\n      <div className={classes.main}>\n        {displayImage()}\n        {downloadButton()}\n      </div>\n    </div>\n  );\n};\n\nexport default DownloadPage;\n\n// import React, { FC, useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n// import Button from \"@material-ui/core/Button\";\n// import firebase from \"../firebase\";\n// import TopHeader from \"../components/topPage/topHeader\";\n// import { TileData } from \"../types/types\";\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n//     main: {\n//       textAlign: \"center\",\n//       marginTop: \"5%\",\n//     },\n//     tileImage: {\n//       height: \"436px\",\n//       width: \"436px\",\n//     },\n//   })\n// );\n\n// const DownloadPage: FC = () => {\n//   // const { keyword } = useParams;\n//   const classes = useStyles();\n//   const [data, setData] = useState<TileData[]>([]);\n\n//   const getData = async (searchWord: string | undefined) => {\n//     const db = firebase.firestore();\n//     const tileDataRef = db.collection(\"tileData\");\n//     // const searchedData = tileDataRef.where(\n//     //   // \"keyword\",\n//     //   \"array-contains\",\n//     //   searchWord\n//     // );\n//     const snapShot = await searchedData.get();\n//     const temporaryData: object[] = [];\n\n//     snapShot.docs.map((doc) => {\n//       temporaryData.push(doc.data());\n//     });\n\n//     setData(temporaryData as TileData[]);\n//   };\n\n//   // useEffect(() => {\n//   //   getData(keyword);\n//   // }, []);\n\n//   const displayImage = () => {\n//     return (\n//       <div>\n//         {data.map((title) => (\n//           <div>\n//             <img\n//               className={classes.tileImage}\n//               src={tile.image}\n//               alt={tile.title}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     );\n//   };\n\n//   const downloadButton = () => {\n//     return (\n//       <div>\n//         {data.map((tile) => (\n//           <Button variant=\"contained\" href={tile.downloadUrl}>\n//             無料ダウンロード\n//           </Button>\n//         ))}\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div>\n//       <TopHeader />\n//       <div className={classes.main}>\n//         {displayImage()}\n//         {downloadButton()}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DownloadPage;\n","/Users/yamazakikosuke/Desktop/React/distribution-site/src/firebase.ts",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":42,"column":29,"nodeType":"52","messageId":"53","endLine":42,"endColumn":31},{"ruleId":"54","severity":1,"message":"55","line":51,"column":6,"nodeType":"56","endLine":51,"endColumn":8,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"51","line":39,"column":29,"nodeType":"52","messageId":"53","endLine":39,"endColumn":31},{"ruleId":"54","severity":1,"message":"55","line":48,"column":6,"nodeType":"56","endLine":48,"endColumn":8,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [keyword]",{"range":"66","text":"67"},{"range":"68","text":"67"},[1311,1313],"[keyword]",[1250,1252]]