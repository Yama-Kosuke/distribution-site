[{"/Users/yamazakikosuke/Desktop/React/distribution-site/src/reportWebVitals.ts":"1","/Users/yamazakikosuke/Desktop/React/distribution-site/src/index.tsx":"2","/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/topPage.tsx":"3","/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topHeader.tsx":"4","/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topMain.tsx":"5","/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/resultPage.tsx":"6","/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/resultPage/resultImageList.tsx":"7","/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/downloadPage.tsx":"8","/Users/yamazakikosuke/Desktop/React/distribution-site/src/firebase.ts":"9"},{"size":425,"mtime":1609938313712,"results":"10","hashOfConfig":"11"},{"size":518,"mtime":1609939957039,"results":"12","hashOfConfig":"11"},{"size":710,"mtime":1610163437526,"results":"13","hashOfConfig":"11"},{"size":667,"mtime":1610249132972,"results":"14","hashOfConfig":"11"},{"size":3285,"mtime":1610249145222,"results":"15","hashOfConfig":"11"},{"size":664,"mtime":1610249090723,"results":"16","hashOfConfig":"11"},{"size":3701,"mtime":1610274503945,"results":"17","hashOfConfig":"11"},{"size":4360,"mtime":1610249077503,"results":"18","hashOfConfig":"11"},{"size":549,"mtime":1610249240384,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"v7fgmy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yamazakikosuke/Desktop/React/distribution-site/src/reportWebVitals.ts",[],["40","41"],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/index.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/topPage.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topHeader.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/topPage/topMain.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/resultPage.tsx",[],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/components/resultPage/resultImageList.tsx",["42","43"],"import React, { FC, useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport firebase from \"../../firebase\";\nimport { TileData } from \"../../types/types\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: \"80%\",\n      textAlign: \"center\",\n      marginTop: \"2%\",\n    },\n    tileImage: {\n      height: \"218px\",\n      width: \"218px\",\n    },\n  })\n);\n\nconst ImageItemList: FC = () => {\n  const [data, setData] = useState<TileData[]>([]);\n  const { keyword }:{ keyword:string} = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const getData = async (searchWord: string | undefined) => {\n    const db = firebase.firestore();\n    const tileDataRef = db.collection(\"tileData\");\n    const searchedData = tileDataRef.where(\n      \"keyword\",\n      \"array-contains\",\n      searchWord\n    );\n    const snapShot = await searchedData.get();\n    const temporaryData: object[] = [];\n\n    snapShot.docs.map((doc) => {\n      temporaryData.push(doc.data());\n    });\n\n    setData(temporaryData as TileData[]);\n  };\n\n  useEffect(() => {\n    getData(keyword);\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {data.map((tile) => (\n        <div>\n          <Button onClick={() => history.push(\"/download/\" + tile.title)}>\n            <img\n              className={classes.tileImage}\n              src={tile.image}\n              alt={tile.title}\n            />\n          </Button>\n          <h3>{tile.title}</h3>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ImageItemList;\n\n// import React, {FC, useState, useEffect} from \"react\";\n// import {useHistory, useParams} from \"react-router-dom\";\n// import Button from \"@material-ui/core/Button\";\n// import {createStyles, makeStyles} from \"@material-ui/core/styles\";\n\n// import firebase from \"../../firebase\";\n// import {TileData} from \"../../types/types\";\n\n// const useStyles = makeStyles(() =>\n//   createStyles({\n//       root: {\n//           display: \"flex\",\n//           flexWrap: \"wrap\",\n//           width: \"80%\",\n//           textAlign: \"center\",\n//           marginTop: \"2%\",\n//       },\n//       tileImage: {\n//           height: \"218px\",\n//           width: \"218px\",\n//       },\n//   }),\n// )\n\n// const ImageItemList: FC = () => {\n//     const [data, setData] = useState<TileData[]>([]);\n//     // const { keyword } = useParams();\n//     const classes = useStyles();\n//     const history = useHistory();\n\n//     const getData = async (searchWord: string | undefined) => {\n//         const db = firebase.firestore();\n//         const tileDataRef = db.collection(\"tileData\");\n//         const searchedData = tileDataRef.where(\"keyword\", \"array-contains\", searchWord);\n//         const snapShot = await searchedData.get();\n//         const temporaryData: object[] = [];\n\n//         snapShot.docs.map(doc => {\n//             temporaryData.push(doc.data());\n//         })\n\n//         setData(temporaryData as TileData[]);\n\n//     }\n\n//     // useEffect(() => {\n//     //     getData(keyword);\n//     // }, []);\n\n//     return(\n//       <div className={classes.root}>\n//         {data.map((tile) => (\n//           <div>\n//             <Button\n//               onClick={() => history.push(\"/download/\" + tile.title)}\n//             >\n//               <img className={classes.tileImage} src={tile.image} alt={tile.title} />\n//             </Button>\n//             <h3>{tile.title}</h3>\n//           </div>\n//         ) )}\n//       </div>\n//     )\n// }\n\n// export default ImageItemList;\n","/Users/yamazakikosuke/Desktop/React/distribution-site/src/pages/downloadPage.tsx",["44","45"],"/Users/yamazakikosuke/Desktop/React/distribution-site/src/firebase.ts",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":42,"column":29,"nodeType":"52","messageId":"53","endLine":42,"endColumn":31},{"ruleId":"54","severity":1,"message":"55","line":51,"column":6,"nodeType":"56","endLine":51,"endColumn":8,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"51","line":35,"column":31,"nodeType":"52","messageId":"53","endLine":35,"endColumn":33},{"ruleId":"54","severity":1,"message":"55","line":45,"column":8,"nodeType":"56","endLine":45,"endColumn":10,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [keyword]",{"range":"66","text":"67"},{"range":"68","text":"67"},[1308,1310],"[keyword]",[1300,1302]]